stash-capacity-mailbox {
  mailbox-type = "akka.dispatch.UnboundedDequeBasedMailbox"
  stash-capacity = 5
}

cassandra-journal {

  contact-points = ["127.0.0.1"]

}

akka {

  persistence {

    journal {
      plugin = "cassandra-journal"
      auto-start-journals = ["cassandra-journal"]
    }

  }

}

akka {

  logger-startup-timeout = 10s

  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "INFO"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"

    serializers {
      json = "app.EventSerialization"
    }

    serialization-bindings {
      "app.ChangeBalance" = json
      "app.BalanceChanged" = json
      "app.IsLocked" = json
      "app.GetBalance" = json
      "app.MoneyTransaction" = json
      "app.AckRollback" = json
      "app.AckCommit" = json
      "app.AckFinalize" = json
      "app.Commit" = json
      "app.Rollback" = json
      "app.Finalize" = json
      "app.Accepted" = json
      "app.Rejected" = json
      "app.Vote" = json
      "app.Abort" = json
      "app.Finalizing" = json
      "app.Rollingback" = json
      "app.Check" = json
      "app.StartFinalize$" = json
      "app.StartRollback$" = json
      "app.StartVotingProcess$" = json
      "app.AccountStashOverflow" = json

    }


  }

  remote {
    netty.tcp {
      hostnmame = 127.0.0.1
      hostname = ${?POD_IP}
      port = ${clustering.port}
    }
  }

}

clustering {
  port = 2551
}

akka.cluster.http.management.hostname = ${management.ip}
akka.cluster.http.management.port = ${management.port}

management {
  ip = "0.0.0.0"
  port = 19999
}

akka.cluster.metrics.enabled=off

akka.extensions = [de.heikoseeberger.constructr.ConstructrExtension, akka.persistence.Persistence]

constructr {
  coordination {
    host = localhost
    host = ${?ETCD_SERVICE_HOST}
    port = 2379
  }
}